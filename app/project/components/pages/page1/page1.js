
/**
 * Copyright (C) 2025 to the present, Crestron Electronics, Inc.
 * All rights reserved.
 * No part of this software may be reproduced in any form, machine
 * or natural, without the express written consent of Crestron Electronics.
 * Use of this source code is subject to the terms of the Crestron Software License Agreement 
 * under which you licensed this source code.  
 *
 * This code was automatically generated by Crestron's code generation tool.
*/
/*jslint es6 */
/*global serviceModule, CrComLib */




const page1Module = (() => {
    'use strict';
    


    /*
     * Initialize Method
     */
    
    function onInit() {
    //    serviceModule.addEmulatorScenarioNoControlSystem("./app/project/components/pages/page1/page1-emulator.json");
      
    }

    /**
     * private method for page class initialization
     */
    let loadedSubId = CrComLib.subscribeState('o', 'ch5-import-htmlsnippet:page1-import-page', (value) => {
        if (value['loaded']) {
        ;
        // NOTE: second parameter to CrComLib.publishEvent() is always a string 
        
            const barcoPress = document.getElementById('barco-button'); 
            function barcoClick(ev){ 
            // when clicked send a join pulse 
            // console.log(`toggle(${id})clicked`); 
                CrComLib.publishEvent('b','1',true); 
                CrComLib.publishEvent('b','1',false)
            }

            barcoPress.addEventListener('click',barcoClick); 

            const nvxPress = document.getElementById('nvx-container'); 
            function nvxClick(ev){ 
            // when clicked send a join pulse 
            // console.log(`toggle(${id})clicked`); 
                CrComLib.publishEvent('b','2',true); 
                CrComLib.publishEvent('b','2',false)
            }
            nvxPress.addEventListener('click',nvxClick); 




            const d1Id = document.getElementById('barco-container');
            window.CrComLib.subscribeState('b','1', (value) => {
                if (value){
                    d1Id.classList.add('icon-container-selected');
                }
                else {    
                    d1Id.classList.remove('icon-container-selected');        
                }       
            });
            const d2Id = document.getElementById('nvx-container');
            window.CrComLib.subscribeState('b','2', (value) => {
                if (value){
                    d2Id.classList.add('icon-container-selected');
                }
                else {    
                    d2Id.classList.remove('icon-container-selected');        
                }       
            });

               
            
            const d8Id = window.CrComLib.subscribeState('b','8', (value) => {});
            const d9Id = window.CrComLib.subscribeState('b','9', (value) => {});
            const d10Id = window.CrComLib.subscribeState('b','10', (value) => {});
            const d20Id = window.CrComLib.subscribeState('b','20', (value) => {});
            const d21Id = window.CrComLib.subscribeState('b','21', (value) => {});            


            const nvxButton = document.getElementById('nvx-button');
            const barcoButton = document.getElementById('barco-button');
            const nvxContainer = document.getElementById('nvx-container');
            const barcoContainer = document.getElementById('barco-container');

            if (barcoContainer) {   
                barcoContainer.addEventListener('click', () => {
                    pulseDigital(sendDigital1);
                    console.log('Barco Container Clicked');
                });
            }

            if (nvxContainer) {
                nvxContainer.addEventListener('click', () => {
                    pulseDigital(sendDigital2);
                    console.log('NVX Container Clicked');
                });
            }

            onInit();
            setTimeout(() => {
                CrComLib.unsubscribeState('o', 'ch5-import-htmlsnippet:page1-import-page', loadedSubId);
                loadedSubId = '';
                window.CrComLib.unsubscribeState('b', '1', d1Id);
                window.CrComLib.unsubscribeState('b', '2', d2Id);
                // window.CrComLib.unsubscribeState('b', '3', d3Id);
                window.CrComLib.unsubscribeState('b', '8', d8Id);
                window.CrComLib.unsubscribeState('b', '9', d9Id);
                window.CrComLib.unsubscribeState('b', '10', d10Id);
                window.CrComLib.unsubscribeState('b', '20', d20Id);
                window.CrComLib.unsubscribeState('b', '21', d21Id);

            });
        }
    }); 

    /*
     * All public method and properties are exported here
     */
    return {
        pulseDigital,   //Expose the pulseDigital function 
        sendDigital1,   //Expose the sendDigital1 function
        sendDigital2,   //Expose the sendDigital2 function
 
    };
})();
window.page1Module = page1Module;


